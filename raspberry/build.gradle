apply from: "$rootDir/gradle/scripts/dependencies.gradle"

buildscript {
    ext {
        kotlin_version = '1.3.61'
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
        classpath "com.vanniktech:gradle-dependency-graph-generator-plugin:0.6.0-SNAPSHOT"

    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

apply plugin: 'kotlin'

import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorPlugin
import com.vanniktech.dependency.graph.generator.DependencyGraphGeneratorExtension.Generator
import guru.nidi.graphviz.attribute.Color
import guru.nidi.graphviz.attribute.Style

plugins.apply(DependencyGraphGeneratorPlugin)

def customGenerator = new Generator(
        "custom", // Suffix for our Gradle task.
        { dependency ->
            println(dependency.getModuleGroup())
            dependency.getModuleGroup().startsWith("raspberry")
        }, // Only want Firebase.
        { dependency -> true }, // Include transitive dependencies.
        { node, dependency -> node.add(Style.SOLID, Color.rgb("#000000")) }, // Give them some color.

)

dependencyGraphGenerator {
    generators.add(customGenerator)
}